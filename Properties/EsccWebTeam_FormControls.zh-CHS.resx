<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorAddressBlank" xml:space="preserve">
    <value>请输入地址</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorAddressPostcodeOnly" xml:space="preserve">
    <value>请点击“寻找地址”填写您的地址</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorSaonFormat" xml:space="preserve">
    <value>您地址的第1行中有些字符是不允许的</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorPaonFormat" xml:space="preserve">
    <value>您地址的第2行中有些字符是不允许的</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorStreetDescriptorFormat" xml:space="preserve">
    <value>您地址的第3行中有些字符是不允许的</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorLocalityFormat" xml:space="preserve">
    <value>您地址的第4行中有些字符是不允许的</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorTownFormat" xml:space="preserve">
    <value>市镇名称中有些字符是不允许的</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorAdministrativeAreaFormat" xml:space="preserve">
    <value>郡名称中有些字符是不允许的</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorSaonLength" xml:space="preserve">
    <value>您地址的第1行的长度不应超过100个字符</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorPaonLength" xml:space="preserve">
    <value>您地址的第2行的长度不应超过100个字符</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorStreetDescriptorLength" xml:space="preserve">
    <value>您地址的第3行的长度不应超过100个字符</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorLocalityLength" xml:space="preserve">
    <value>您地址的第4行的长度不应超过35个字符</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorTownLength" xml:space="preserve">
    <value>市镇名称的长度不应超过30个字符</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorAdministrativeAreaLength" xml:space="preserve">
    <value>郡名称不得超过30个字符</value>
    <comment>Find Address control</comment>
  </data>
  <data name="FindAddressIntro" xml:space="preserve">
    <value>如果您有东苏塞克斯郡的邮编， 请在下面的文本框中输入邮编并用“寻找地址”按钮填写您地址的详细信息。</value>
    <comment>Find Address control</comment>
  </data>
  <data name="AdministrativeAreaLabel" xml:space="preserve">
    <value>国家</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ButtonFindAddress" xml:space="preserve">
    <value>寻找地址</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ConfirmAddress" xml:space="preserve">
    <value>确认地址</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorPostcodeRequired" xml:space="preserve">
    <value>请输入邮政编码</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorRecheckAddress" xml:space="preserve">
    <value>请检查您是否正确地输入了东苏塞克斯的邮政编码，或者手动添加您的地址</value>
    <comment>Find Address control</comment>
  </data>
  <data name="FindAddressOr" xml:space="preserve">
    <value>或</value>
    <comment>Find Address control</comment>
  </data>
  <data name="LocalityLabel" xml:space="preserve">
    <value>村庄或市镇的一部分</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ManualAddress" xml:space="preserve">
    <value>手动输入地址</value>
    <comment>Find Address control</comment>
  </data>
  <data name="PaonLabel" xml:space="preserve">
    <value>建筑名称或编号</value>
    <comment>Find Address control</comment>
  </data>
  <data name="PostcodeLabel" xml:space="preserve">
    <value>邮编</value>
    <comment>Find Address control</comment>
  </data>
  <data name="SaonLabel" xml:space="preserve">
    <value>公寓编号或公司</value>
    <comment>Find Address control</comment>
  </data>
  <data name="SelectAddress" xml:space="preserve">
    <value>请选择正确的地址</value>
    <comment>Find Address control</comment>
  </data>
  <data name="StreetLabel" xml:space="preserve">
    <value>街道名称</value>
    <comment>Find Address control</comment>
  </data>
  <data name="TownLabel" xml:space="preserve">
    <value>市镇</value>
    <comment>Find Address control</comment>
  </data>
  <data name="ErrorPostcodeNotFound" xml:space="preserve">
    <value>没有发现与提供的邮政编码相符的地址</value>
    <comment>Find Address control</comment>
  </data>
</root>